<UserControl x:Class="Controller_Tester.Standard_Simulation.TagViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Controller_Tester.Standard_Simulation"
             mc:Ignorable="d" Height="660"
             x:Name="view">
    <UserControl.Resources>
        <Style TargetType="Control" x:Key="EmptyFocusVisualStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">
        <DockPanel Height="auto">
            <Grid Margin="0" >
                <Grid.Resources>
                    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                    <!-- This CompositeCollection basically Concatenates the Tags and Connectors in a single one -->
                    <CompositeCollection x:Key="Col">
                        <CollectionContainer Collection="{Binding DataContext.Connectors,Source={x:Reference view}}"/>
                        <CollectionContainer Collection="{Binding DataContext.Tags,Source={x:Reference view}}"/>
                    </CompositeCollection>

                    <!-- This is the DataTemplate that will be used to render the Tag class -->
                    <DataTemplate DataType="{x:Type local:Tag}">
                        <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <Canvas Margin="-20,-20,20,20">
                                        <Ellipse Stroke="Black" StrokeThickness="1"
                                             x:Name="Ellipse" 
                                             HorizontalAlignment="Center" 
                                             VerticalAlignment="Center" 
                                             Width="40" 
                                             Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                             >
                                            <Ellipse.Fill>
                                                <!--<ImageBrush Stretch="Uniform" ImageSource="Resources/main_led_white.png" />-->
                                                <ImageBrush ImageSource="{Binding TagState_Normal}" />

                                            </Ellipse.Fill>
                                            <!-- 스케일 애니메이션
                                        <Ellipse.Triggers>
                                            <EventTrigger RoutedEvent="Ellipse.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard TargetProperty="Width" RepeatBehavior="Forever">
                                                        <DoubleAnimation FillBehavior="Stop" RepeatBehavior="2x" BeginTime="0:0:1" From="40" To="45" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Ellipse.Triggers>
                                        -->
                                            <!-- 움직이는 애니메이션  -->
                                            <Ellipse.Triggers>
                                                <EventTrigger RoutedEvent="Ellipse.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard TargetName="Ellipse" TargetProperty="(Canvas.Left)">
                                                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Duration="0:0:5">
                                                                <!--부드럽게이동 -->
                                                                <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                                <LinearDoubleKeyFrame KeyTime="0:0:2.5" Value="3" />
                                                                <LinearDoubleKeyFrame KeyTime="0:0:5" Value="0" />
                                                                <!--끊어지게 이동 -->
                                                                <!--
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:6" Value="144" />
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:7" Value="240" />
                                                        -->
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Ellipse.Triggers>

                                        </Ellipse>



                                        <TextBlock Canvas.Top="-20" Canvas.Left="-40" Width="120" 
                                               TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>


                                        <!--
                                    <TextBlock Canvas.Left="50" Canvas.Top="10"
                                               Text="{Binding X, StringFormat='{}X = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="XText"/>

                                    <TextBlock Canvas.Left="50" Canvas.Top="25"
                                               Text="{Binding Y, StringFormat='{}Y = {0}'}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed" x:Name="YText"/>
                                    -->
                                        <!-- 노드의 속성-->
                                        <!--
                                    <Ellipse Fill="{Binding TagReceiveState}"  Canvas.Left="40" Canvas.Top="0" Height="7" Width="7" Stroke="Black" StrokeThickness="0" x:Name="DataReceiveState"/>
                                     -->
                                        <Rectangle Canvas.Right="5" Canvas.Top="0" Height="25" Width="15" Stroke="Black" StrokeThickness="0" x:Name="DataReceiveState">
                                            <Rectangle.Fill>
                                                <ImageBrush ImageSource="{Binding TAgReceiveState}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <TextBlock Canvas.Left="50" Canvas.Top="10"
                                                   Text="{Binding Mac_Id}"
                                                   IsHitTestVisible="False"
                                                   Visibility="Collapsed" x:Name="MacText"/>

                                        <TextBlock Canvas.Left="50" Canvas.Top="25"
                                            Text="{Binding Rssi, StringFormat='{}Rssi = {0}'}"
                                            IsHitTestVisible="False"
                                            Visibility="Collapsed" x:Name="RssiText"/>

                                        <TextBlock Canvas.Left="10" Canvas.Top="40"
                                                   Text="{Binding ACK_Express}"
                                                   IsHitTestVisible="False"
                                                   Visibility="Collapsed" x:Name="AckTagEnable"/>



                                    </Canvas>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                            <!--<Setter TargetName="Ellipse" Property="Fill" Value="Red"/> -->

                                            <Setter TargetName="Ellipse"  Property="Fill">
                                                <Setter.Value>
                                                    <!--
                                                <ImageBrush Stretch="Uniform" ImageSource="Resources/main_led_red.png"/>
                                                -->
                                                    <!--<ImageBrush ImageSource="{Binding TagState_Select, TargetNullValue={StaticResource DefaultImage}}" />
                                                -->
                                                    <ImageBrush ImageSource="{Binding TagState_Select}" />
                                                </Setter.Value>
                                            </Setter>

                                        </DataTrigger>
                                        <Trigger Property="IsDragging" Value="True">
                                            <!--<Setter TargetName="Ellipse" Property="Fill" Value="Green"/>-->
                                            <Setter TargetName="Ellipse"  Property="Fill">
                                                <Setter.Value>
                                                    <!--
                                                <ImageBrush Stretch="Uniform" ImageSource="Resources/main_led_green.png"/>
                                                -->
                                                    <ImageBrush ImageSource="{Binding TagState_Move, TargetNullValue={x:Null}}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" Value="True">

                                            <!--
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        -->
                                            <Setter TargetName="MacText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="RssiText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="AckTagEnable" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                            <Setter TargetName="Ellipse" Property="StrokeThickness" Value="2"/>
                                            <Setter TargetName="Ellipse" Property="Stroke" Value="Red"/>
                                            <Setter TargetName="Ellipse" Property="Fill" Value="White"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <!--
                                        <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        -->
                                            <Setter TargetName="MacText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="RssiText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="AckTagEnable" Property="Visibility" Value="Visible"/>

                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </DataTemplate>

                    <!-- This is the DataTemplate that will be used to render the Connector class -->
                    <DataTemplate DataType="{x:Type local:Connector}">
                        <Line Stroke="Blue" StrokeThickness="3"
                            X1="{Binding Start.X}" Y1="{Binding Start.Y}"
                            X2="{Binding End.X}" Y2="{Binding End.Y}" x:Name="Line"/>

                        <DataTemplate.Triggers>

                            <DataTrigger Binding="{Binding End}" Value="{x:Null}">
                                <Setter TargetName="Line" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                                <Setter TargetName="Line" Property="Stroke" Value="#FF08B7F9"/>
                                <Setter TargetName="Line" Property="StrokeDashArray" Value="2 2"/>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="DashAnimation">
                                        <!--<Storyboard Duration="00:00:20" RepeatBehavior="Forever">-->
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation From="0" To="10" Storyboard.TargetName="Line" Storyboard.TargetProperty="StrokeDashOffset"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="DashAnimation"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </DataTemplate.Triggers>

                    </DataTemplate>
                </Grid.Resources>


                <Label Content="{Binding Label_Group_Name}"></Label>
                <ListBox SelectedItem="{Binding SelectedObject}" PreviewMouseMove="ListBox_PreviewMouseMove" PreviewMouseDown="ListBox_PreviewMouseDown" >
                    <ListBox.Template>
                        <ControlTemplate>
                            <Border BorderBrush="Black" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="GhostWhite" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>

   
                                <Border>
                                    <!-- 그리드 정의-->
                                    <Border.Background>
                                        <VisualBrush TileMode="Tile"
                                    Viewport="0,0,25,25" ViewportUnits="Absolute" 
                                    Viewbox="0,0,25,25" ViewboxUnits="Absolute">
                                            <VisualBrush.Visual>
                                                <Rectangle Stroke="Darkgray" StrokeThickness="0.5" Height="50" Width="50"  StrokeDashArray="1"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Border.Background>
                                    <ItemsPresenter/>
                                </Border>

                            </Border>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemsSource>
                        <StaticResource ResourceKey="Col"/>
                    </ListBox.ItemsSource>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--
                        <Canvas IsItemsHost="True" Background="#01FFFFFF" 
                                Height="{Binding AreaHeight}" Width="{Binding AreaWidth}"
                                VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        -->
                            <Canvas IsItemsHost="True" Background="#01FFFFFF" 
                                Height="1000" Width="1000"
                                VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter x:Name="Content"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Content" Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="Gray" ShadowDepth="4" BlurRadius="10"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsNew}" Value="True">
                                                <Setter Property="Opacity" Value=".5"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>

            </Grid>
        </DockPanel>
    </ScrollViewer>
</UserControl>
